---
description: 
globs: 
alwaysApply: true
---
# Package Imports in SothebAIs

## Import Patterns

Use package-style imports for importing from shared packages. This helps with portability and clarity.

### Correct import pattern:
```typescript
// Good: Use package-style imports for shared code
import { createLogger } from '@sothebais/shared/utils/logger.js';
import type { ServiceGroup } from '@sothebais/shared/types/service.js';
```

### Avoid relative paths for shared code:
```typescript
// Avoid: Don't use relative paths for shared code
import { createLogger } from '../../../shared/utils/logger.js';
import type { ServiceGroup } from '../../../shared/types/service.js';
```

## ESM Import Requirements

When using ESM imports, always include the file extension (.js) at the end of the import path, even for TypeScript files.

```typescript
// Correct: Include .js extension
import { createLogger } from '@sothebais/shared/utils/logger.js';

// Incorrect: Missing .js extension
import { createLogger } from '@sothebais/shared/utils/logger';
```

## Path Aliases

The project is configured with the following path aliases:

- `@/*` - References files within the current app's `src/` directory
- `@sothebais/shared/*` - References files from the shared package's `src/` directory

Use these path aliases consistently throughout the codebase. 