# docker-compose.frontend.yaml

services:
  traefik:
    image: traefik:v3.3
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--ping=true"
      - "--ping.entrypoint=traefik"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.traefik.address=:3100"
      # HTTP to HTTPS redirect
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      # Certificate Resolver configuration
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      # Metrics
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
    ports:
      - "80:80"     # HTTP
      - "443:443"   # HTTPS
      - "3100:3100" # Dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
    networks:
      - frontend_net
    environment:
      - "ACME_EMAIL=${ACME_EMAIL}"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - frontend_net
    volumes:
      - redis_data:/data
    restart: unless-stopped

  admin-frontend:
    build:
      context: ./apps/admin
      dockerfile: Dockerfile
      target: development
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${CLERK_PUBLISHABLE_KEY}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
      - NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/dashboard
      - DOCKER_SOCKET=/var/run/docker.sock
      - WATCHPACK_POLLING=true
      - PORT=3000
      - METRICS_PORT=3090
      - HEALTH_PORT=3091
      - NEXT_PUBLIC_EVENT_HANDLER_SUBDOMAIN=${EVENT_HANDLER_SUBDOMAIN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Development volumes - modified for better compatibility
      - ./apps/admin:/app
      - /app/node_modules
      - /app/.next
    networks:
      - frontend_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.admin.rule=Host(`${ADMIN_SUBDOMAIN}`)"
      - "traefik.http.services.admin.loadbalancer.server.port=3000"
      - "traefik.http.routers.admin.entrypoints=websecure"
      - "traefik.http.routers.admin.tls.certresolver=letsencrypt"
    command: npm run dev
    ports:
      - "3000:3000" # Main App
      - "3090:3090" # Metrics
      - "3091:3091" # Health

  event-handler:
    build:
      context: ./apps/event-handler
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - PORT=4300
      - EVENT_STREAM_PORT=4301
      - METRICS_PORT=4390
      - HEALTH_PORT=4391
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./apps/event-handler:/app
      - /app/node_modules
    networks:
      - frontend_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.event-handler.rule=Host(`${EVENT_HANDLER_SUBDOMAIN}`)"
      - "traefik.http.services.event-handler.loadbalancer.server.port=4300"
      - "traefik.http.routers.event-handler.entrypoints=websecure"
      - "traefik.http.routers.event-handler.tls.certresolver=letsencrypt"
      # Event stream endpoint
      - "traefik.http.routers.event-stream.rule=Host(`${EVENT_HANDLER_SUBDOMAIN}`) && PathPrefix(`/events`)"
      - "traefik.http.services.event-stream.loadbalancer.server.port=4301"
      - "traefik.http.routers.event-stream.entrypoints=websecure"
      - "traefik.http.routers.event-stream.tls.certresolver=letsencrypt"
    ports:
      - "4300:4300" # Main API
      - "4301:4301" # Event Stream
      - "4390:4390" # Metrics
      - "4391:4391" # Health
    depends_on:
      - redis

volumes:
  letsencrypt:
  redis_data:

networks:
  frontend_net:
    driver: bridge 