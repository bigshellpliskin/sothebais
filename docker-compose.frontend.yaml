# docker-compose.frontend.yaml

services:
  traefik:
    image: traefik:v3.3
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.traefik.address=:8081"
      # HTTP to HTTPS redirect
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      # Certificate Resolver configuration
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
    ports:
      - "80:80"
      - "443:443"
      - "8081:8081"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
    networks:
      - frontend_net
    environment:
      - "ACME_EMAIL=${ACME_EMAIL}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8081/ping"]
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 5s

  admin-frontend:
    build:
      context: ./apps/admin
      dockerfile: Dockerfile
      target: development
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${CLERK_PUBLISHABLE_KEY}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
      - NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/dashboard
      - DOCKER_SOCKET=/var/run/docker.sock
      - WATCHPACK_POLLING=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Development volumes - modified for better compatibility
      - ./apps/admin:/app
      - /app/node_modules
      - /app/.next
    networks:
      - frontend_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.admin.rule=Host(`${ADMIN_SUBDOMAIN}`)"
      - "traefik.http.services.admin.loadbalancer.server.port=3000"
      - "traefik.http.routers.admin.entrypoints=websecure"
      - "traefik.http.routers.admin.tls.certresolver=letsencrypt"
    command: npm run dev
    ports:
      - "3000:3000"

volumes:
  letsencrypt:

networks:
  frontend_net:
    driver: bridge 