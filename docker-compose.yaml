# docker-compose.yaml
version: '3.8'

services:
  # Main ElizaOS Application
  eliza:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      # Add development environment variable to ensure TypeScript is installed
      - NODE_ENV_ADDITIONAL=development
      # ElizaOS specific environment variables
      - TWITTER_USERNAME=${TWITTER_USERNAME}
      - TWITTER_PASSWORD=${TWITTER_PASSWORD}
      - TWITTER_EMAIL=${TWITTER_EMAIL}
      - DISCORD_APPLICATION_ID=${DISCORD_APPLICATION_ID}
      - DISCORD_API_TOKEN=${DISCORD_API_TOKEN}
      - ELEVENLABS_XI_API_KEY=${ELEVENLABS_XI_API_KEY}
      - TEE_MODE=${TEE_MODE:-default_value}
      # Auction system specific
      - WALLET_SECRET_SALT=${WALLET_SECRET_SALT:-default_salt}
      - SOL_RPC_URL=${SOL_RPC_URL:-https://api.mainnet-beta.solana.com}
      # Redis connection
      - REDIS_URL=redis://:${REDIS_PASSWORD:-default_password}@redis:6379
    volumes:
      - ./characters:/app/storage/characters:rw
      - ./db.sqlite:/app/storage/db/db.sqlite:rw
      - ./packages/client-twitter/src/tweetcache:/app/packages/client-twitter/src/tweetcache:rw
      - ./data:/app/storage/data:rw
      # Development volumes
      - ./src:/app/src:ro
      - ./package.json:/app/package.json:ro
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
    ports:
      - "3000:3000"
      - "9464:9464" # Prometheus metrics endpoint
    depends_on:
      redis:
        condition: service_healthy
      prometheus:
        condition: service_healthy
    restart: always
    networks:
      - eliza_net

  # Redis for Caching
  redis:
    image: redis:alpine
    command: redis-server --protected-mode no
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - eliza_net
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-default_password}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Prometheus for Metrics
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - eliza_net

  # Grafana for Monitoring
  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3001:3000"
    networks:
      - eliza_net

  # Node Exporter for Host Metrics
  node-exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - eliza_net

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  eliza_net:
    driver: bridge