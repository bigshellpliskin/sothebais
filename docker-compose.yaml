# docker-compose.yaml
version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./storage/traefik/letsencrypt:/letsencrypt"
    networks:
      - auction_net

  # NFT Auction Core Service
  auction-manager:
    image: artifacts_auction-manager:latest
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://:${REDIS_PASSWORD:-default_password}@redis:6379
      - SHAPE_L2_URL=http://shape-l2:4000
    volumes:
      - ./storage/auction:/app/storage:rw
    ports:
      - "4100:4100"
    depends_on:
      - redis
      - shape-l2
    networks:
      - auction_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Event Orchestration Service
  event-handler:
    image: artifacts_event-handler:latest
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://:${REDIS_PASSWORD:-default_password}@redis:6379
      - AUCTION_MANAGER_URL=http://auction-manager:4100
      - STREAM_MANAGER_URL=http://stream-manager:4200
      - ELIZA_URL=http://eliza:3000
      - SHAPE_L2_URL=http://shape-l2:4000
    ports:
      - "4300:4300"
    depends_on:
      - redis
      - auction-manager
      - stream-manager
      - eliza
      - shape-l2
    networks:
      - auction_net

  # Stream Processing Service
  stream-manager:
    image: artifacts_stream-manager:latest
    environment:
      - NODE_ENV=production
      - TWITTER_USERNAME=${TWITTER_USERNAME}
      - TWITTER_PASSWORD=${TWITTER_PASSWORD}
      - TWITTER_EMAIL=${TWITTER_EMAIL}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-default_password}@redis:6379
      - AUCTION_MANAGER_URL=http://auction-manager:4100
    volumes:
      - ./storage/stream:/app/storage:rw
    ports:
      - "4200:4200"
    depends_on:
      - redis
      - auction-manager
    networks:
      - auction_net

  # Shape L2 Integration Service
  shape-l2:
    image: artifacts_shape-l2:latest
    environment:
      - NODE_ENV=production
      - WALLET_SECRET_SALT=${WALLET_SECRET_SALT:-default_salt}
      - SOL_RPC_URL=${SOL_RPC_URL:-https://api.mainnet-beta.solana.com}
    volumes:
      - ./storage/shape-l2:/app/storage:rw
    ports:
      - "4000:4000"
    networks:
      - auction_net

  # ElizaOS VTuber Service
  eliza:
    image: artifacts_eliza:latest
    environment:
      - NODE_ENV=production
      - NODE_ENV_ADDITIONAL=development
      - DISCORD_APPLICATION_ID=${DISCORD_APPLICATION_ID}
      - DISCORD_API_TOKEN=${DISCORD_API_TOKEN}
      - ELEVENLABS_XI_API_KEY=${ELEVENLABS_XI_API_KEY}
      - TEE_MODE=${TEE_MODE:-default_value}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-default_password}@redis:6379
      - AUCTION_MANAGER_URL=http://auction-manager:4100
    volumes:
      - ./apps/eliza/characters:/app/storage/characters:rw
      - ./storage/eliza/db:/app/storage/db:rw
      - ./storage/eliza/data:/app/storage/data:rw
      - ./storage/eliza/cache:/app/storage/cache:rw
    ports:
      - "4400:4400"
    depends_on:
      - redis
      - auction-manager

  # Admin Frontend Service
  admin-frontend:
    image: artifacts_admin-frontend:latest
    environment:
      - NODE_ENV=production
      - API_URL=http://event-handler:4300
      - MONITORING_URL=http://grafana:3001
    ports:
      - "3000:3000"
    depends_on:
      - event-handler
      - grafana
    networks:
      - auction_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.admin.rule=Host(`admin.${DOMAIN}`)"
      - "traefik.http.routers.admin.entrypoints=websecure"
      - "traefik.http.routers.admin.tls.certresolver=letsencrypt"

  # Redis for Caching and Message Queue
  redis:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-default_password} --protected-mode no
    volumes:
      - ./storage/redis:/data:rw
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-default_password}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-default_password}", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - auction_net

  # Prometheus for Metrics
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./storage/prometheus:/prometheus:rw
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - auction_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.${MONITORING_DOMAIN}`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=letsencrypt"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  # Grafana for Monitoring
  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SERVER_ROOT_URL=https://${MONITORING_DOMAIN}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./storage/grafana:/var/lib/grafana:rw
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`${MONITORING_DOMAIN}`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    networks:
      - auction_net

  # Node Exporter for Host Metrics
  node-exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - auction_net

networks:
  auction_net:
    driver: overlay
    attachable: true
    external: true
    name: auction_net