name: Docker Build

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [admin, stream-manager, auction-engine, event-handler]
        
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,format=short
      
      # Special handling for eliza service (commented out)
      # - name: Build and push eliza service
      #   if: matrix.service == 'eliza'
      #   run: |
      #     cd apps/eliza
      #     docker buildx build \
      #       --file Dockerfile \
      #       --push ${{ github.event_name != 'pull_request' }} \
      #       --tags ${{ steps.meta.outputs.tags }} \
      #       --labels ${{ steps.meta.outputs.labels }} \
      #       --cache-from type=gha \
      #       --cache-to type=gha,mode=max \
      #       .
        
      # Standard handling for other services
      - name: Build and push other services
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./apps/${{ matrix.service }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max